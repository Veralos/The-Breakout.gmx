<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>audio_play_sound(mus_title, 0, true);

menu_main = ds_list_create();
scr_menu_item(menu_main, "Play", scr_play);
scr_menu_item(menu_main, "Options", scr_options);
scr_menu_item(menu_main, "Controls", scr_controls);
scr_menu_item(menu_main, "Quit", scr_quit);

menu_options = ds_list_create();
scr_menu_item_addon(menu_options, "Fullscreen", scr_fullscreen, scr_addon_fullscreen);
scr_menu_item_addon(menu_options, "Scale", scr_scale, scr_addon_scale);
scr_menu_item_addon(menu_options, "Sound", scr_sound, scr_addon_sound);
scr_menu_item_addon(menu_options, "Music", scr_music, scr_addon_music);
scr_menu_item(menu_options, "Back", scr_back);

menu_controls = ds_list_create();
scr_menu_item(menu_controls, "Keyboard", scr_keyboard);
scr_menu_item(menu_controls, "Gamepad", scr_gamepad);
scr_menu_item(menu_controls, "Back", scr_back);

menu_keyboard = ds_list_create();
scr_menu_item(menu_keyboard, "Move Up", scr_error);
scr_menu_item(menu_keyboard, "Move Down", scr_error);
scr_menu_item(menu_keyboard, "Move Left", scr_error);
scr_menu_item(menu_keyboard, "Move Right", scr_error);
scr_menu_item(menu_keyboard, "Hold Ball", scr_error);
scr_menu_item(menu_keyboard, "Back", scr_back);

menu_gamepad = ds_list_create();
scr_menu_item(menu_gamepad, "Move Up", scr_error);
scr_menu_item(menu_gamepad, "Move Down", scr_error);
scr_menu_item(menu_gamepad, "Move Left", scr_error);
scr_menu_item(menu_gamepad, "Move Right", scr_error);
scr_menu_item(menu_gamepad, "Hold Ball", scr_error);
scr_menu_item(menu_gamepad, "Back", scr_back);

back_stack = ds_stack_create();
menu = menu_main;
selected = 0;

animate = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (obj_input.select_up_pressed) {
    audio_play_sound(snd_select, 0, false);
    selected--;
}
if (obj_input.select_down_pressed) {
    audio_play_sound(snd_select, 0, false);
    selected++;
}

if (selected &lt; 0) {
    selected = ds_list_size(menu) - 1;
}
if (selected &gt; ds_list_size(menu) - 1) {
    selected = 0;
}

if (obj_input.confirm_pressed) {
    audio_play_sound(snd_confirm, 0, false);
    var selection = ds_list_find_value(menu, selected);
    script_execute(selection[1]);
}

if (obj_input.back_pressed) {
    if (ds_stack_empty(back_stack)) {
        game_end();
    }
    else {
        scr_back();
    }
}

animate += 0.01;
if (animate &gt; 1) {
    animate = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(spr_cell, 0, room_width / 2, -32);

draw_sprite(spr_sitting, 0, room_width * (3 / 8), 190);

draw_set_color(c_black);
draw_set_alpha(0.75);
draw_rectangle(room_width * (3 / 4), 0, room_width, room_height, false);
draw_set_alpha(1);

draw_set_color(c_white);
draw_set_halign(fa_middle);
draw_set_valign(fa_middle);

var anim = sin(animate * 2 * pi);

draw_set_font(fnt_end);

draw_text_transformed(room_width * (3 / 8), 48, "The Breakout", 1 + 0.02 * anim, 1 + 0.02 * anim, 0);

draw_set_font(fnt_main);

var selection;
var label;
for (var i = 0; i &lt; ds_list_size(menu); i++) {
    selection = ds_list_find_value(menu, i);
    draw_set_font(fnt_main);
    draw_text(room_width * (7 / 8), 40 + 40 * i, selection[0]);
    if (selection[2] != -1) {
        draw_set_font(fnt_small);
        draw_text(room_width * (7 / 8), 40 + 40 * i + 14, script_execute(selection[2]));
    }
    
}
draw_text(room_width * (7 / 8) - 52 + 2 * anim, 40 + 40 * selected, "&gt;");
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
