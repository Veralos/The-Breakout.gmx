<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bad</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>emit = audio_emitter_create();
speed_x = 0;
speed_y = 0;
pause = 0;
draw_x = obj_player.x
draw_y = obj_player.y;
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (pause &gt; 30 || instance_number(obj_player) &lt; 1) {
    pause--;
    if (pause = 30) {
        audio_play_sound(snd_go, 0, false);
    }
    speed = 0;
    gravity = 0;
}
else {
    gravity = power(point_distance(x, y, obj_player.x, obj_player.y), 1.5) / 300;
    gravity_direction = point_direction(x, y, obj_player.x, obj_player.y);
    
    if (speed &gt; 12) {
        speed = 12;
    }
    if (speed &lt; 1) {
        speed = 0;
    }
    friction = 0.5;
    
    if (speed &gt;= 5) {
        audio_listener_position(obj_player.x, obj_player.y, 0);
        audio_emitter_position(emit, x, y, 0);
        audio_play_sound_on(emit, snd_swing, 0, false);
        instance_create(x, y, obj_afterimage);
    }
    
    if (pause &gt; 0) {
        pause--;
    }
    else if (keyboard_check_pressed(ord('A')) || keyboard_check_pressed(ord('Q'))) {
        audio_play_sound(snd_stop, 0, false);
        pause = 60;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_number(obj_player) &gt; 0) {
    draw_x = obj_player.x;
    draw_y = obj_player.y;
}

var dist = point_distance(x, y, draw_x, draw_y);
var dir = point_direction(x, y, draw_x, draw_y);
for (var i = 0; i &lt; 1; i += 0.25) {
    draw_sprite(spr_chain, 0, x + lengthdir_x(dist * i, dir), y + lengthdir_y(dist * i, dir));
}
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
